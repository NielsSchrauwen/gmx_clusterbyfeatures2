.. |kmeans| raw:: html

   <a href="https://en.wikipedia.org/wiki/K-means_clustering" target="_blank">K-means clustering</a>

.. |DBSCAN| raw:: html

   <a href="https://en.wikipedia.org/wiki/DBSCAN" target="_blank">DBSCAN - Density-based spatial clustering of applications with noise</a>

.. |gmixture| raw:: html

   <a href="https://en.wikipedia.org/wiki/Mixture_model" target="_blank">Gaussian mixture model clustering</a>

.. |elbow| raw:: html

   <a href="https://en.wikipedia.org/wiki/Elbow_method_(clustering)" target="_blank">Elbow method</a>

.. |DBI| raw:: html

  <a href="https://en.wikipedia.org/wiki/Davies%E2%80%93Bouldin_index" target="_blank">DBI : Daviesâ€“Bouldin index</a>

.. |xmgrace| raw:: html

  <a href="http://plasma-gate.weizmann.ac.il/Grace/" target="_blank">Grace</a>

.. |sklearn| raw:: html

  <a href="http://scikit-learn.org" target="_blank">scikit-learn</a>

.. |overview-clustering| raw:: html

  <a href="http://scikit-learn.org/stable/modules/clustering.html#overview-of-clustering-methods" target="_blank">here</a>

.. |kmeans-detail| raw:: html

  <a href="http://scikit-learn.org/stable/modules/clustering.html#k-means" target="_blank">here</a>

.. |dbscan-detail| raw:: html

  <a href="http://scikit-learn.org/stable/modules/clustering.html#dbscan" target="_blank">here</a>

.. |gmixture-detail| raw:: html

  <a href="http://scikit-learn.org/stable/modules/mixture.html#mixture" target="_blank">here</a>



Command line options
====================

Options to specify input files
------------------------------

``-f [<.xtc/.trr/...>]``
~~~~~~~~~~~~~~~~~~~~~~~~
Input trajectory file of ``xtc`` ``trr`` ``cpt`` ``gro`` ``g96`` ``pdb`` or
``tng`` format.

.. note:: If this file is not provided, only clustering will be performed. No
          operations will be performed that require trajectory such as RMSD
          calculation, central structure calculations, clustered trajectories
          etc.

.. note:: In case of **XTC** and **TNG** formats, writing central structures and
          clustered trajectories are relatively fast.

******

``-s [<.tpr/.gro/...>]``
~~~~~~~~~~~~~~~~~~~~~~~~
An input structure file of ``tpr`` ``gro`` ``g96`` or ``pdb`` format. It is **required**
if trajectory is given as input.

******

``-n [<.ndx>]``
~~~~~~~~~~~~~~~
If given, index groups from this file will be prompted for selection. Otherwise,
default index groups will be prompted for selection.

This file will be ignored when no trajectory file will be provided.

Users will be prompted for three index group
  * **Choose a group for the output:** Select a index group to output it as central
    structure and clustered trajectory. It can be whole system or any part of the
    system.
  * **Choose a group for clustering/RMSD calculation:** The actual atom groups for
    which clustering has to be done and RMSD has to be calculated.
    .. note :: If you are doing PCA based clustering, it should be same first
    index group as selected in ``gmx covar`` and ``gmx anaeig``.
  * **Choose a group for fitting or superposition:** The atom groups used for
    fitting or superposition before RMSD calculation.

    .. note:: This input will be only prompted when ``-fit`` or ``-fit2central``
              option is given. Otherwise, group selected above will be used for
              fitting.

    .. note :: If you are doing PCA based clustering, it should be same as first
               index group selected in ``gmx covar`` and ``gmx anaeig``.

******

``-feat [<.xvg>]``
~~~~~~~~~~~~~~~~~~

It accepts a file containing features of trajectory as a function of time.
Its format is similar to the projections file generated by ``gmx anaeig``.
Therefore, in case of PCA data, output (``-proj``) of ``gmx anaeig`` can be
directly used as input for gmx_clusterByFeatures.

In this file, two columns should be present. First column is time and second column
is feature values. Each time-feature columns should be separated by "&".

The format is as following:

::

 # FEATURE - 1
 # Time    values
 0.0     123.12
 10.0    123.12
 20.0    123.12
 .
 .
 .

 &

 # FEATURE - 2
 0.0     123.12
 10.0    123.12
 20.0    123.12
 .
 .
 .

 &

 # FEATURE - 3
 0.0     123.12
 10.0    123.12
 20.0    123.12
 .
 .
 .

 &


.. note:: If this file is not provided, ``-clid [<.xvg>]`` is the required option.

******

Options to specify output files
-------------------------------

``-clid [<.xvg>]``
~~~~~~~~~~~~~~~~~~

It can be both **input** and **output** file. It contains two columns, first column
is time and second column is cluster label/id.

In default case when clustering has to be done, it is generated after clustering is
finished and contains information about cluster id of each frame.

However, it can be also given as input to obtain clustered trajectories. For example,
if clustering was performed with "gmx cluster", the obtained ``-clid [<.xvg>]``
file can be used here to extract clustered trajectory.

.. note:: To treat this as an input file, do not use ``-feat [<.xvg>]`` option.

******

``-g [<.log>]``
~~~~~~~~~~~~~~~

It is output log file and contains several information about clustering methods
and obtained results.

******

``-fout [<.xtc/.trr/...>]``
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Output clustered trajectories. Separate trajectory of clusters is written for
convenience. These separate trajectories can be used for further analysis.

Each trajectory file name is suffixed by its respective cluster-id.

******

``-cpdb [<.pdb>]``
~~~~~~~~~~~~~~~~~~

Output separate pdb files for central structures of each cluster.

Each pdb file name is suffixed by its respective cluster-id.

******

``-rmsd [<.xvg>]``
~~~~~~~~~~~~~~~~~~

RMSD of clustering atom groups with respect to central structure.

Each RMSD file name is suffixed by its respective cluster-id.

******

Other options
-------------

``-xvg  <keyword>``
~~~~~~~~~~~~~~~~~~~

It directs the formatting of all output <.xvg> files. By default, <.xvg> files are
in ``xmgrace`` format, which can be plotted using |xmgrace| (``xmgrace`` command).

To plot with any other program, use ``-xvg none`` then a plain text file is
obtained.

******

``-method <keyword>``
~~~~~~~~~~~~~~~~~~~~~

Method to use for clustering. All the methods used here are used from
Python |sklearn| library.

An overview on clustering method are presented |overview-clustering|.

kmeans, dbscan, gmixture

Presently following methods are implemented:
  1. ``-method kmeans``

     |kmeans|- It needs cluster number as input (``-ncluster <int>``).
     Therefore, one should know beforehand how many cluster is there in data.
     To automatically determine the cluster number,
     see `-cmetric  <keyword> <cmdline.html#cmetric-keyword>`_.
     For more details about k-means method, see |kmeans-detail|.

  2. ``-method dbscan``

     |DBSCAN| - It does not require cluster number beforehand.
     The clusters are controlled by two other input options:
     `-db_eps  <real> <cmdline.html#db_eps-real>`_
     and `-db_min_samples  <int> <cmdline.html#db_min_samples-int>`_.
     For more details about DBSCAN method, see |dbscan-detail|.

  3. ``-method gmixture``

     |gmixture| - It also needs cluster number as input
     (``-ncluster <int>``).
     Therefore, one should know beforehand how many cluster is there in data.
     To automatically determine the cluster number, see
     `-cmetric  <keyword> <cmdline.html#cmetric-keyword>`_.
     For more details about k-means method, see |gmixture-detail|.

******

``-nfeature <int>``
~~~~~~~~~~~~~~~~~~~

Number of features to be read from `-feat [<.xvg>]  <cmdline.html#feat-xvg>`_
file.

If file contains less than requested number of features, all features will be read.


******


``-cmetric <keyword>``
~~~~~~~~~~~~~~~~~~~~~~~~~~

Cluster metric to determine the total number of cluster automatically,
particularly for k-means and Gaussian-mixture model.

.. note:: All the cluster metrics are only applicable when ``-method kmeans`` or
          ``-method gmixture`` is used.

Presently following cluster metrics are implemented:
  1. ``-cmetric prior``

     If clusters count is known beforehand, use this with ``-ncluster <int>``.
     Here, ``-ncluster`` takes input as the clusters count.

  2. ``-cmetric rmsd``

     Root Mean Square deviation between central structures of clusters. It uses
     `-crmsthres  <real> <cmdline.html#crmsthres-real>`_ option for RMSD
     threshold/cutoff.

     .. note:: It requires trajectory file as input.
               Otherwise, ``-cmetric ssr-sst`` will be used for cluster metric with
               default `-ssrchange <real> <cmdline.html#ssrchange-real>`_ value.

  3. ``-cmetric ssr-sst``

     It is SSR/SST ratio and used for |elbow|. It is the threshold in relative
     change in SSR/SST ratio in percentage.

  4. ``-cmetric pFS``

     Psuedo F-statatics determined from SSR/SST ratio. Clusters count with
     highest value is considered.

  5. ``-cmetric DBI``

     |DBI|. Lowest value is considered.



******


``-ncluster <int>``
~~~~~~~~~~~~~~~~~~~

It takes the number of clusters. Its usage depends on
`-cmetric <keyword> <cmdline.html#cmetric-keyword`.


.. note:: It is only applicable when ``-method kmeans`` or ``-method gmixture``
          is used.

Conditions:
  1. For ``-cmetric prior``, it is considered as the number clusters to be generated.

  2. For ``-cmetric rmsd``, it is considered as largest number of clusters to
     be generated and iteratively number of clusters are reduced to check whether
     RMSD between central structures are **not** below RMSD threshold
     (`-crmsthres  <real> <cmdline.html#crmsthres-real>`_).

  3. For ``-cmetric ssr-sst``, ``-cmetric pFS`` and ``-cmetric DBI``, it is
     considered as maximum number of clusters to generated. At first, two
     clusters are generated and iteratively number of clusters are increased by
     one. When maximum number of clusters is reached, these three cluster-metrics
     are calculated and finally, number of clusters is selected.

******

``-crmsthres <real>``
~~~~~~~~~~~~~~~~~~~~~

RMSD (nm) threshold between central structures for RMSD cluster metric method.

It is used with ``-cmetric rmsd``. In each iteration, RMSD between all central
structures are calculated. If any RMSD value is within the input RMSD (nm)
threshold, number of clusters is decreased by one in next iteration.

It is assumed that when RMSD between two central structures are within the threshold,
central structures are similar enough to merge the two clusters as a single cluster.
However, it is **not** necessary that these two clusters will merge in next iteration.
